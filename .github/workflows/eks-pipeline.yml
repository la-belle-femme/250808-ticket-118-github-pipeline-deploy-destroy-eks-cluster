name: EKS Cluster Management

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        if: github.event.inputs.action == 'plan'
        run: terraform plan -input=false

      - name: Terraform Apply
        if: github.event.inputs.action == 'apply'
        run: terraform apply -auto-approve -input=false

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: |
          # First delete nodegroups explicitly
          aws eks list-nodegroups \
            --cluster-name ${{ vars.cluster_name }} \
            --region ${{ secrets.AWS_REGION }} \
            --query "nodegroups" \
            --output text | xargs -I {} \
            aws eks delete-nodegroup \
            --cluster-name ${{ vars.cluster_name }} \
            --nodegroup-name {} \
            --region ${{ secrets.AWS_REGION }} || true
          
          echo "Waiting 3 minutes for nodegroups to delete..."
          sleep 180
          
          # Now run terraform destroy
          terraform destroy -auto-approve -input=false
          
          # Final cleanup verification
          aws eks list-clusters --region ${{ secrets.AWS_REGION }} | \
            grep -q ${{ vars.cluster_name }} || \
            echo "Cluster successfully destroyed"
